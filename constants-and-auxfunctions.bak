
(define text-color "white")
(define text-size 14)
(define text-padding 3)
(define text-box-height (+ text-size (* 2 text-padding)))
(define overlay-under-amount 2)
(define overlay-indent 10)

(define cell-width 100)
(define cell-height cell-width)

(define horizontal-cells-amount 10)
(define vertical-cells-amount 6)

(define bottom-bar-height (* (+ 1 overlay-under-amount) text-box-height))
(define side-bar-width cell-width)

(define window-width (+ (* horizontal-cells-amount cell-width) side-bar-width))
(define window-height (+ (* vertical-cells-amount cell-height) bottom-bar-height))

(define gamefield-width (* horizontal-cells-amount cell-width))
(define gamefield-height (* vertical-cells-amount cell-height))

(define (drawable-file title)
  (string-append "images/tiles-" (number->string cell-width) "px/" title))

(define monster-height 35)
(define monster-width 35)
(define projectile-dimensions 10)

(define collision-margin-coefficient 0.8)

(define monster-spread-at-start 4) ; the amount of cells over which the monsters are randomly spawned in front of the path


(define tower-configurations '(("Stenentoren" "tower-steen.png") ("Kanonstoren" "tower-kanonskogel.png") ("Bommentoren" "tower-bom.png") ("Nettentoren" "tower-net.png")))
(define tower-config-name car)
(define tower-config-image cadr)

(define tower-item-selector-width 2) ; in px
(define tower-item-height 1.5) ; in Positions

(define (sqr a)
  (* a a))

(define-syntax when
  (syntax-rules ()
    ((when test body ...)
     (if test
         (begin body ...)))))